from aiogram import Bot, Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.utils.media_group import MediaGroupBuilder

from src.config import MODERATOR_ID

from src.keyboards.basic import get_send_user_keyboard, get_main_menu_keyboard, get_send_media_scammer_keyboard
from src.keyboards.menu import get_report_message

from src.entities.scammers.schemas import ScammerReportSchemeCreate
from src.entities.scammers.service import scammers_service, scammers_reports_service
from src.entities.scammers.models import scam_media_repository

from src.utils.callbacks import ReportMessage
from src.utils.scammers import get_scammer_data_from_message


scammer_router = Router()


F: Message


class AddScammerForm(StatesGroup):
    get_profile = State()
    add_profile = State()
    detect_hide_profile = State()
    get_proofs = State()
    get_media = State()
    add_scam_to_database = State()


@scammer_router.message(F.text == "–ö–∏–Ω—É—Ç—å —Ä–µ–ø–æ—Ä—Ç  ‚úç")
async def send_scam_user(message: Message, bot: Bot, state: FSMContext):
    await message.answer(
        f"–ü–µ—Ä–µ—à–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏–∫–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç", reply_markup=get_send_user_keyboard()
    )
    await state.set_state(AddScammerForm.get_profile)


@scammer_router.message(F.text == "–ù–∞–∑–∞–¥")
async def back(message: Message, bot: Bot, state: FSMContext):
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...", reply_markup=get_main_menu_keyboard())
    await state.clear()


@scammer_router.message(AddScammerForm.get_profile)
async def get_scam(message: Message, bot: Bot, state: FSMContext):
    if message.user_shared or message.forward_from:
        await message.answer("–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚úÖ")
        scammer = get_scammer_data_from_message(message)
        scammer_from_db = await scammers_service.add_scammer(scammer)
        await state.update_data(scammer_id=scammer_from_db.id)
        await message.answer("–†–∞—Å–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ —É —Ç–µ–±—è —Å–æ —Å–∫–∞–º–º–µ—Ä–æ–º:")
        await state.set_state(AddScammerForm.get_proofs)
    else:
        await message.answer(
            "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–±–æ —Å–∫—Ä—ã–ª –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ, –ª–∏–±–æ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ \n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëáüëáüëá",
            reply_markup=get_send_user_keyboard()
        )


@scammer_router.message(F.text == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç üö©")
async def send_report(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()
    await send_post_to_moderator(message, bot, state, data["scammers_reports_id"])


async def send_post_to_moderator(message: Message, bot: Bot, state: FSMContext, scammers_reports_id: int):
    media = await scam_media_repository.get_list(
        scam_media_repository.model.scammers_reports_id == scammers_reports_id
    )

    if len(media) > 0:
        scam_rep = await scammers_reports_service.get_scammer_report(scammers_reports_id)

        album_builder = MediaGroupBuilder(
            caption=scam_rep.text
        )

        for media_object in media:
            if media_object.type == "photo":
                album_builder.add_photo(media=media_object.file_id)
            elif media_object.type == "video":
                album_builder.add_video(media=media_object.file_id)

        await bot.send_message(
            MODERATOR_ID,
            f"–†–µ–ø–æ—Ä—Ç –æ—Ç <b>{message.from_user.username}</b> –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID = {scam_rep.scammer_id} üõë"
        )
        await bot.send_media_group(MODERATOR_ID, album_builder.build())
        await bot.send_message(
            MODERATOR_ID, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_report_message(message.from_user.id, scammers_reports_id)
        )
        await state.clear()
        await message.answer(
            "–í–∞—à —Ä–µ–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ...  üïí\n\n"
            "–ú—ã —Å–æ–æ–±—â–∏–º –Ω–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ —ç—Ç–æ–º—É –¥–µ–ª—É –ø–æ—Å–ª–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º  üë®‚Äç‚öñ",
            reply_markup=get_main_menu_keyboard()
        )
    else:
        await message.answer("–ó–∞–≥—Ä—É–∑–∏ —Ö–æ—Ç—è –±—ã 1 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –≤–∏–¥–µ–æ")


@scammer_router.message(AddScammerForm.get_media, F.video)
async def get_video(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()
    scam_report_id = data["scammers_reports_id"]
    video_id = message.video.file_id
    await scam_media_repository.create(
        {
            "file_id": video_id,
            "type": "video",
            "scammers_reports_id": scam_report_id
        }
    )


@scammer_router.message(AddScammerForm.get_media, F.photo)
async def get_photo(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()
    scam_report_id = data["scammers_reports_id"]
    photo_id = message.photo[0].file_id
    await scam_media_repository.create(
        {
            "file_id": photo_id,
            "type": "photo",
            "scammers_reports_id": scam_report_id
        }
    )


@scammer_router.message(AddScammerForm.get_proofs, F.text)
async def ask_proofs(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()
    scammer_report = ScammerReportSchemeCreate(
        text=message.text, reported_id=message.from_user.id, scammer_id=data["scammer_id"]
    )
    scammers_reports = await scammers_reports_service.create_scammer_report(scammer_report)
    await message.answer(
        "–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –¥–ª—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–∫–∞–º–∞ üñº üé• \n\n"
        "–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëáüëáüëá",
        reply_markup=get_send_media_scammer_keyboard()
    )
    await state.update_data(scammers_reports_id=scammers_reports.id)
    await state.set_state(AddScammerForm.get_media)


@scammer_router.callback_query(ReportMessage.filter())
async def qwe(call: CallbackQuery, bot: Bot, callback_data: ReportMessage):
    if callback_data.decision:
        await bot.send_message(
            callback_data.reported_id, "–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª–∏ –≤–∞—à —Ä–µ–ø–æ—Ä—Ç –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–Ω–µ—Å–ª–∏ –µ–≥–æ –≤ –±–∞–∑—É! üëÆ‚Äç‚ôÇ\n\n"
                                       "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–º–æ—â—å –≤ –±–æ—Ä—å–±–µ —Å –º–æ—à–µ–Ω–∏–∫–∞–º–∏!  ü§ù"
        )
        await bot.edit_message_text(
            "–ú–æ—à–µ–Ω–Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É  ‚úÖ", call.message.chat.id, call.message.message_id
        )
        await bot.edit_message_reply_markup(
            call.message.chat.id, call.message.message_id, reply_markup=None
        )
    else:
        await bot.send_message(
            callback_data.reported_id, "–ú—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –≤–∞—à —Ä–µ–ø–æ—Ä—Ç! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–µ–ø–æ—Ä—Ç –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å "
                                       "–≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É!"
        )
        await bot.edit_message_text(
            "–í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–π —Ä–µ–ø–æ—Ä—Ç  ‚ùå", call.message.chat.id, call.message.message_id
        )
        await bot.edit_message_reply_markup(
            call.message.chat.id, call.message.message_id, reply_markup=None
        )
    await call.answer()
